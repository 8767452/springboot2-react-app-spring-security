<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.readin.robot.dao.PermissionMapper">
  <resultMap id="BaseResultMap" type="com.readin.robot.mapping.Permission">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, description, url, pid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from permission
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="permissionAll"  resultType="com.readin.robot.mapping.Permission">
   SELECT * from permission ;
 </select>
 <select id="permissionByUserId" parameterType="int" resultType="com.readin.robot.mapping.Permission">
      select p.*
        from users u
        LEFT join user_role sru on u.login_id= sru.sys_user_id
        LEFT join role r on sru.sys_role_id=r.id
        LEFT join permission_role spr on spr.role_id=r.id
        LEFT join permission p on p.id =spr.permission_id
      where u.login_id=#{userId}
 </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from permission
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.readin.robot.mapping.Permission">
    insert into permission (id, name, description, 
      url, pid)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{pid,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.readin.robot.mapping.Permission">
    insert into permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="pid != null">
        pid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.readin.robot.mapping.Permission">
    update permission
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.readin.robot.mapping.Permission">
    update permission
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>